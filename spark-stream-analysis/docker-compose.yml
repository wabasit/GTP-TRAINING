services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "ecommerce_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  spark-master:
    image: bitnami/spark:3.5
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark-network
    healthcheck:
      test: ["CMD", "ps", "-C", "java"]
      interval: 5s
      timeout: 5s
      retries: 10

  spark-worker:
    image: bitnami/spark:3.5
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      spark-master:
        condition: service_healthy
    networks:
      - spark-network

  pyspark-notebook:
    build:
      context: .
      dockerfile: Dockerfile.pyspark
    container_name: pyspark-notebook
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - "8888:8888"
    networks:
      - spark-network
    depends_on:
      postgres:
        condition: service_healthy
      spark-master:
        condition: service_healthy
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/opt/workspace/data
      - ./jars:/home/jovyan/jars
    command: >
      bash -c "/opt/conda/bin/python -c 'import pyspark; print(\"PySpark is available\")' &&
               /opt/conda/bin/python /home/jovyan/work/data_generator.py &
               sleep 15 &&
               /opt/conda/bin/python /home/jovyan/work/spark_streaming_to_postgres.py"
    healthcheck:
      test: ["CMD", "/opt/conda/bin/python", "-c", "import pyspark; print('PySpark available')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  spark-network:
    driver: bridge

volumes:
  postgres_data: